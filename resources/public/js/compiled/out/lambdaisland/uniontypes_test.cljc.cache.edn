{:rename-macros {}, :renames {}, :use-macros {testing cljs.test, is cljs.test, deftest cljs.test}, :excludes #{}, :name lambdaisland.uniontypes-test, :imports nil, :requires {cljs.test cljs.test, clojure.test cljs.test, lambdaisland.uniontypes lambdaisland.uniontypes}, :uses {}, :defs {a-test {:protocol-inline nil, :meta {:file "/home/arne/clj-projects/uniontypes/test/lambdaisland/uniontypes_test.cljc", :line 25, :column 10, :end-line 25, :end-column 16}, :name lambdaisland.uniontypes-test/a-test, :variadic false, :file "test/lambdaisland/uniontypes_test.cljc", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 25, :end-line 25, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}}, :require-macros {cljs.test cljs.test, clojure.test cljs.test}, :cljs.analyzer/constants {:seen #{lambdaisland.uniontypes-test/a-test = :testing-contexts :ns :name :file :end-column :type :column lambdaisland.uniontypes-test :fail :line not :expected :end-line :error :pass :arglists :actual :doc :test a-test :message}, :order [:testing-contexts :type :expected :actual :message :error = :pass :fail not lambdaisland.uniontypes-test/a-test :ns :name :file :end-column :column :line :end-line :arglists :doc :test lambdaisland.uniontypes-test a-test]}, :doc nil}